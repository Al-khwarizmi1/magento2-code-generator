1. Add the filename column to your table in:

        ${Vendorname}\${Modulename}\Setup\InstallSetup;

        $table->addColumn(
            'filename',
            Table::TYPE_TEXT,
            255,
            ['nullable' => false],
            'filename'
        );


2.  Add the formElement into your uiComponent form:

    ${Vendorname}/${Modulename}/view/adminhtml/ui_component/${vendorname}_${modulename}_${simpleentityname}_form.xml:

    <field name="file">
        <argument name="data" xsi:type="array">
            <item name="config" xsi:type="array">
                <item name="label" xsi:type="string">${Simpleentityname}</item>
                <item name="formElement" xsi:type="string">fileUploader</item>
                <item name="componentType" xsi:type="string">fileUploader</item>
                <item name="notice" xsi:type="string" translate="true">Allowed file types: jpeg, gif, png</item>
                <item name="maxFileSize" xsi:type="number">2097152</item>
                <item name="allowedExtensions" xsi:type="string">jpg jpeg gif png</item>
                <item name="uploaderConfig" xsi:type="array">
                    <item name="url" xsi:type="string">${vendorname}_${modulename}/file/uploader</item>
                </item>
                <item name="sortOrder" xsi:type="string">99</item>
                <item name="scopeLabel" xsi:type="string">[GLOBAL]</item>
            </item>
        </argument>
    </field>


3.- Get right File format for the form in your DataProvider

   ${Vendorname}/${Modulename}/Ui/Component/Form/${Simpleentityname}/DataProvider.php

   /**
    * Get data
    *
    * @return array
    */
   public function getData()
   {
      if (!$this->loadedData) {
          $items = $this->collection->getItems();
          foreach ($items as $item) {
              $image = $item->get${Simpleentityname}();
              if ($image->getId()) {
                $item->setFile($image->getFileValueForForm());
              }
              $this->loadedData[$item->getId()] = $item->getData();
              break;
          }
      }
      return $this->loadedData;
   }

4. Save image on your Save action controller

   ${Vendorname}/${Modulename}/Controller/Adminhtml/${Simpleentityname}/Save.php:

   /**
    * file data preprocessing
    *
    * @param array $data
    *
    * @return array
    */
   protected function filePreprocessing($data)
   {
       if (empty($data['file'])) {
           unset($data['file']);
           $data['file']['delete'] = true;
       }
       return $data;
   }